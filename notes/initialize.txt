Linux:
permission: chmod -R +x /workspace/fastmoonStreams/kafka
zookeeper: /workspace/fastmoonStreams/kafka/bin/zookeeper-server-start.sh /workspace/fastmoonStreams/kafka/config/zookeeper.properties
server: /workspace/fastmoonStreams/kafka/bin/kafka-server-start.sh /workspace/fastmoonStreams/kafka/config/server.properties
producer: python plauncher.py
consumer: faust -A c worker -l info --web-port=6066
check pid of a port: sudo ss -tulpn | grep 6066
kill -9 14153


Virtual environment linux:
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt-get update
sudo apt-get install python3.7
sudo apt-get install python3.7-venv
python3.7 -m venv fastmoonVenv



Windows:
cd C:\coding\fastmoon\fastmoonStreams
C:\coding\fastmoon\fastmoonVenv\env\Scripts\activate

zookeeper: 

cd C:\Kafka
.\bin\windows\zookeeper-server-start.bat .\config\zookeeper.properties

server:

cd C:\Kafka
.\bin\windows\kafka-server-start.bat .\config\server.properties

producer: python p.py
consumer: faust -A c worker -l info --web-port=6066




# To do:
--- fix okx option api fetch
--- faust stats monitoring
--- Scalability and Load Balancing. Make sure faust adds more workers automatically in order to deal with increasing workload.
    Use Kubernetes, but it is for a cluster of servers.
--- backpressure managment with max.poll.records and fetch.min.bytes
    run the app for a few minutes nad estimate the amount of data in bytes that it consumes over 1 secod at its noraml times, lower times and higher times. 
    Faust stats monitoring for your help
--- service level agreement that sends you messages if your processsing time or message latency goes beyond expected thresholds
--- withi faust gaugin
--- maybe with prometeus if needed
--- implement CI/CD pipelines to automate the testing and deployment of your faust application.

Maybe:
--- high level of logging with elasticsearch, longstash and kibana

