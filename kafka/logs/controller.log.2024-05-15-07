[2024-05-15 07:27:34,730] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-15 07:27:34,771] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-05-15 07:27:34,774] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-05-15 07:27:34,824] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-05-15 07:27:34,830] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-05-15 07:27:34,850] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-05-15 07:27:34,853] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-05-15 07:27:34,887] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2024-05-15 07:27:34,902] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-05-15 07:27:34,910] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-05-15 07:27:34,946] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-05-15 07:27:34,946] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-05-15 07:27:34,946] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-05-15 07:27:34,947] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-05-15 07:27:34,947] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-05-15 07:27:34,952] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-05-15 07:27:34,952] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-05-15 07:27:34,952] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-05-15 07:27:34,952] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-05-15 07:27:34,956] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-05-15 07:27:34,968] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-05-15 07:27:34,970] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-15 07:27:34,976] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-15 07:27:34,977] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-05-15 07:27:34,977] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-05-15 07:27:34,978] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-05-15 07:27:34,982] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-05-15 07:27:34,985] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-05-15 07:27:34,994] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-05-15 07:27:34,994] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-05-15 07:27:34,995] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-05-15 07:27:34,995] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-05-15 07:27:34,997] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-15 07:27:35,000] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-05-15 07:27:35,019] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-05-15 07:27:35,100] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-15 07:27:40,021] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-15 07:27:40,021] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-15 07:29:38,151] INFO [Controller id=0] New topics: [Set(binance_api_perpetual_inverse_gta_btcposfutureperp)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(binance_api_perpetual_inverse_gta_btcposfutureperp,Some(RJ1v4TKiSBCqVR80NiZ5TQ),HashMap(binance_api_perpetual_inverse_gta_btcposfutureperp-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_gta_btcposfutureperp-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_gta_btcposfutureperp-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_gta_btcposfutureperp-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_gta_btcposfutureperp-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-15 07:29:38,157] INFO [Controller id=0] New partition creation callback for binance_api_perpetual_inverse_gta_btcposfutureperp-0,binance_api_perpetual_inverse_gta_btcposfutureperp-1,binance_api_perpetual_inverse_gta_btcposfutureperp-4,binance_api_perpetual_inverse_gta_btcposfutureperp-2,binance_api_perpetual_inverse_gta_btcposfutureperp-3 (kafka.controller.KafkaController)
[2024-05-15 07:29:38,290] INFO [Controller id=0] New topics: [Set(binance_api_option_option_oi_btcoioption, binance_api_perpetual_inverse_funding_btcfundperp)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(binance_api_option_option_oi_btcoioption,Some(f-JqyaqETsipquujyX3LSA),HashMap(binance_api_option_option_oi_btcoioption-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_option_option_oi_btcoioption-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_option_option_oi_btcoioption-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_option_option_oi_btcoioption-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_option_option_oi_btcoioption-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(binance_api_perpetual_inverse_funding_btcfundperp,Some(Qu__V7QQQS2BFSnc7VMd3g),HashMap(binance_api_perpetual_inverse_funding_btcfundperp-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_funding_btcfundperp-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_funding_btcfundperp-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_funding_btcfundperp-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_funding_btcfundperp-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-15 07:29:38,291] INFO [Controller id=0] New partition creation callback for binance_api_perpetual_inverse_funding_btcfundperp-0,binance_api_option_option_oi_btcoioption-3,binance_api_perpetual_inverse_funding_btcfundperp-4,binance_api_option_option_oi_btcoioption-2,binance_api_perpetual_inverse_funding_btcfundperp-1,binance_api_perpetual_inverse_funding_btcfundperp-3,binance_api_option_option_oi_btcoioption-0,binance_api_perpetual_inverse_funding_btcfundperp-2,binance_api_option_option_oi_btcoioption-4,binance_api_option_option_oi_btcoioption-1 (kafka.controller.KafkaController)
[2024-05-15 07:29:38,417] INFO [Controller id=0] New topics: [Set(binance_api_perpetual_inverse_oi_btcoifutureperp)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(binance_api_perpetual_inverse_oi_btcoifutureperp,Some(tYwm3ONwSVaKrHvEwerLOA),HashMap(binance_api_perpetual_inverse_oi_btcoifutureperp-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_oi_btcoifutureperp-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_oi_btcoifutureperp-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_oi_btcoifutureperp-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), binance_api_perpetual_inverse_oi_btcoifutureperp-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-15 07:29:38,417] INFO [Controller id=0] New partition creation callback for binance_api_perpetual_inverse_oi_btcoifutureperp-2,binance_api_perpetual_inverse_oi_btcoifutureperp-4,binance_api_perpetual_inverse_oi_btcoifutureperp-3,binance_api_perpetual_inverse_oi_btcoifutureperp-0,binance_api_perpetual_inverse_oi_btcoifutureperp-1 (kafka.controller.KafkaController)
[2024-05-15 07:32:40,023] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-15 07:32:40,023] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-15 07:32:40,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-05-15 07:32:40,027] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-05-15 07:37:40,027] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-15 07:37:40,028] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-15 07:37:40,029] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-05-15 07:37:40,037] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-05-15 07:42:40,037] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-15 07:42:40,037] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-15 07:42:40,038] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-05-15 07:42:40,038] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-05-15 07:47:40,038] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-15 07:47:40,039] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-15 07:47:40,039] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-05-15 07:47:40,039] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-05-15 07:49:05,613] INFO [Controller id=0] New topics: [HashSet(bybit_api_option_option_oioption_btc)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(bybit_api_option_option_oioption_btc,Some(r5nZyROHR9K1nwEUu2OHtA),HashMap(bybit_api_option_option_oioption_btc-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), bybit_api_option_option_oioption_btc-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), bybit_api_option_option_oioption_btc-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), bybit_api_option_option_oioption_btc-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), bybit_api_option_option_oioption_btc-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-15 07:49:05,614] INFO [Controller id=0] New partition creation callback for bybit_api_option_option_oioption_btc-4,bybit_api_option_option_oioption_btc-0,bybit_api_option_option_oioption_btc-1,bybit_api_option_option_oioption_btc-2,bybit_api_option_option_oioption_btc-3 (kafka.controller.KafkaController)
[2024-05-15 07:49:05,654] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-15 07:52:40,040] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-15 07:52:40,040] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-15 07:52:40,041] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-05-15 07:52:40,041] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-05-15 07:57:40,041] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-15 07:57:40,041] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-15 07:57:40,042] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-05-15 07:57:40,044] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
